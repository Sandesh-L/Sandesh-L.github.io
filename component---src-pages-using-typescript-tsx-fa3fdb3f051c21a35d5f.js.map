{"version":3,"file":"component---src-pages-using-typescript-tsx-fa3fdb3f051c21a35d5f.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/pages/using-typescript.tsx","webpack://gatsby-starter-default/./src/images/clearLOGO.png","webpack://gatsby-starter-default/./src/components/Navbar.js","webpack://gatsby-starter-default/./src/components/Footer.js","webpack://gatsby-starter-default/./src/components/Layout.js","webpack://gatsby-starter-default/./src/components/seo.js"],"sourcesContent":["// If you don't want to use TypeScript you can delete this file!\nimport * as React from \"react\"\nimport { PageProps, Link, graphql, HeadFC } from \"gatsby\"\n\nimport Layout from \"../components/Layout\"\nimport Seo from \"../components/seo\"\n\ntype DataProps = {\n  site: {\n    buildTime: string\n  }\n}\n\nconst UsingTypescript: React.FC<PageProps<DataProps>> = ({\n  data,\n  location,\n}) => (\n  <Layout>\n    <h1>\n      Gatsby supports <b>TypeScript by default</b>\n    </h1>\n    <p>\n      This means that you can create and write <code>.ts/.tsx</code> files for\n      your pages, components, and <code>gatsby-*</code> configuration files (for\n      example <code>gatsby-config.ts</code>).\n    </p>\n    <p>\n      For type checking you'll want to install <code>typescript</code> via npm\n      and run <code>tsc --init</code> to create a <code>tsconfig</code> file.\n    </p>\n    <p>\n      You're currently on the page <code>{location.pathname}</code> which was\n      built on {data.site.buildTime}.\n    </p>\n    <p>\n      To learn more, head over to our{\" \"}\n      <a href=\"https://www.gatsbyjs.com/docs/how-to/custom-configuration/typescript/\">\n        documentation about TypeScript\n      </a>\n      .\n    </p>\n    <Link to=\"/\">Go back to the homepage</Link>\n  </Layout>\n)\n\nexport const Head: HeadFC<DataProps> = () => <Seo title=\"Using TypeScript\" />\n\nexport default UsingTypescript\n\nexport const query = graphql`\n  {\n    site {\n      buildTime(formatString: \"YYYY-MM-DD hh:mm a z\")\n    }\n  }\n`\n","export default __webpack_public_path__ + \"static/clearLOGO-31af769c68ac1c4ea258cf3e075273db.png\";","// Navbar.js\nimport React, { useState } from 'react';\nimport { Link } from 'gatsby';\nimport logo from \"../images/clearLOGO.png\"\n\nconst Navbar = () => {\n  const [darkMode, setDarkMode] = useState(false);\n\n  const toggleTheme = () => {\n    setDarkMode(!darkMode);\n    document.documentElement.classList.toggle('dark');\n  };\n\n  return (\n    <nav className=\"bg-background-50 text-text-900 py-4 px-6 flex justify-between items-center\">\n      <div className=\"flex items-center\">\n        <Link to=\"/\" className=\"text-xl font-bold mr-6\">\n          <img src={logo} alt=\"Logo\" className=\"h-8 w-auto mr-2\"/>\n        </Link>\n        <Link to=\"/\" className=\"mr-4 hover:text-primary-600\">\n          Home\n        </Link>\n        <Link to=\"/resume\" className=\"mr-4 hover:text-primary-600\">\n          Resume\n        </Link>\n        <Link to=\"/projects\" className=\"mr-4 hover:text-primary-600\">\n          Projects\n        </Link>\n        <Link to=\"/contacts\" className=\"hover:text-primary-600\">\n          Contacts\n        </Link>\n      </div>\n      <button\n        className=\"bg-primary-500 text-background-50 px-4 py-2 rounded hover:bg-primary-600\"\n        onClick={toggleTheme}\n      >\n        {darkMode ? 'Light Mode' : 'Dark Mode'}\n      </button>\n    </nav>\n  );\n};\n\nexport default Navbar;","// Footer.js\nimport React from 'react';\nimport { Link } from 'gatsby';\n\nconst Footer = () => {\n  return (\n    <footer className=\"bg-background-800 text-text-50 py-4 px-6 flex justify-between items-center\">\n      <div>\n        <Link to=\"/\" className=\"mr-4 hover:text-primary-200\">\n          Home\n        </Link>\n        <Link to=\"/resume\" className=\"mr-4 hover:text-primary-200\">\n          Resume\n        </Link>\n        <Link to=\"/projects\" className=\"mr-4 hover:text-primary-200\">\n          Projects\n        </Link>\n        <Link to=\"/contacts\" className=\"hover:text-primary-200\">\n          Contacts\n        </Link>\n      </div>\n      <div className=\"text-sm\">&copy; {new Date().getFullYear()} Your Website Name</div>\n    </footer>\n  );\n};\n\nexport default Footer;","// Layout.js\nimport React from 'react';\nimport Navbar from './Navbar';\nimport Footer from './Footer';\n\nconst Layout = ({ children }) => {\n  return (\n    <div className=\"min-h-screen flex flex-col\">\n      <Navbar />\n      <main className=\"flex-grow\">{children}</main>\n      <Footer />\n    </div>\n  );\n};\n\nexport default Layout;","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction Seo({ description, title, children }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:creator\" content={site.siteMetadata?.author || ``} />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n"],"names":["Head","React","Seo","title","_ref","data","location","Layout","pathname","site","buildTime","href","Link","to","Navbar","darkMode","setDarkMode","useState","className","src","logo","alt","onClick","toggleTheme","document","documentElement","classList","toggle","Footer","Date","getFullYear","children","_site$siteMetadata","_site$siteMetadata2","description","useStaticQuery","metaDescription","siteMetadata","defaultTitle","name","content","property","author"],"sourceRoot":""}